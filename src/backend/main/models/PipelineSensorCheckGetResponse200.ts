/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.19.dev163
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PipelineSensorCheckPatchRequestMarkup,
    PipelineSensorCheckPatchRequestMarkupFromJSON,
    PipelineSensorCheckPatchRequestMarkupFromJSONTyped,
    PipelineSensorCheckPatchRequestMarkupToJSON,
} from './';

/**
 * Сведения о правиле физического конвейера компании
 * @export
 * @interface PipelineSensorCheckGetResponse200
 */
export interface PipelineSensorCheckGetResponse200 {
    /**
     * Идентификатор правила
     * @type {number}
     * @memberof PipelineSensorCheckGetResponse200
     */
    id: number;
    /**
     * Признак активного правила
     * @type {boolean}
     * @memberof PipelineSensorCheckGetResponse200
     */
    enabled: boolean;
    /**
     * Дополнительные параметры правила
     * @type {object}
     * @memberof PipelineSensorCheckGetResponse200
     */
    parameters?: object;
    /**
     * 
     * @type {PipelineSensorCheckPatchRequestMarkup}
     * @memberof PipelineSensorCheckGetResponse200
     */
    markup?: PipelineSensorCheckPatchRequestMarkup;
}

export function PipelineSensorCheckGetResponse200FromJSON(json: any): PipelineSensorCheckGetResponse200 {
    return PipelineSensorCheckGetResponse200FromJSONTyped(json, false);
}

export function PipelineSensorCheckGetResponse200FromJSONTyped(json: any, ignoreDiscriminator: boolean): PipelineSensorCheckGetResponse200 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'enabled': json['enabled'],
        'parameters': !exists(json, 'parameters') ? undefined : json['parameters'],
        'markup': !exists(json, 'markup') ? undefined : PipelineSensorCheckPatchRequestMarkupFromJSON(json['markup']),
    };
}

export function PipelineSensorCheckGetResponse200ToJSON(value?: PipelineSensorCheckGetResponse200 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'enabled': value.enabled,
        'parameters': value.parameters,
        'markup': PipelineSensorCheckPatchRequestMarkupToJSON(value.markup),
    };
}


