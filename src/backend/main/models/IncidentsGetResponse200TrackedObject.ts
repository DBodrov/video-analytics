/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.18.dev141
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Сведения об обнаруженном объекте
 * @export
 * @interface IncidentsGetResponse200TrackedObject
 */
export interface IncidentsGetResponse200TrackedObject {
    /**
     * Код транспортного средства
     * @type {string}
     * @memberof IncidentsGetResponse200TrackedObject
     */
    code: string;
    /**
     * Название транспортного средства
     * @type {string}
     * @memberof IncidentsGetResponse200TrackedObject
     */
    name: string;
    /**
     * Дата и время старта слежения за объектом в формате "YYYY-MM-DD HH:MI:SS"
     * @type {string}
     * @memberof IncidentsGetResponse200TrackedObject
     */
    startTime?: string;
    /**
     * Дата и время окончания слежения за объектом в формате "YYYY-MM-DD HH:MI:SS"
     * @type {string}
     * @memberof IncidentsGetResponse200TrackedObject
     */
    endTime?: string;
    /**
     * Направление движения
     * @type {string}
     * @memberof IncidentsGetResponse200TrackedObject
     */
    direction?: string;
    /**
     * Государственный регистрационный номер транспортного средства
     * @type {string}
     * @memberof IncidentsGetResponse200TrackedObject
     */
    licensePlateNumber?: string;
    /** Mock API*/
    extra: TExtraTrackObject[];
}

type TExtraTrackObject = {
  code: string;
  name: string;
  value: string;
  displayOrder: number;
  id: number;
}

export function IncidentsGetResponse200TrackedObjectFromJSON(json: any): IncidentsGetResponse200TrackedObject {
    return IncidentsGetResponse200TrackedObjectFromJSONTyped(json, false);
}

export function IncidentsGetResponse200TrackedObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): IncidentsGetResponse200TrackedObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'code': json['code'],
        'name': json['name'],
        'startTime': !exists(json, 'start_time') ? undefined : json['start_time'],
        'endTime': !exists(json, 'end_time') ? undefined : json['end_time'],
        'direction': !exists(json, 'direction') ? undefined : json['direction'],
        'licensePlateNumber': !exists(json, 'license_plate_number') ? undefined : json['license_plate_number'],
        'extra': ExtraArrayFromJson(json['extra'])
    };
}

function ExtraArrayFromJson(json: any[]) {
  if ((json === undefined) || (json === null)) {
    return json;
}
  return json.map(extraItemFromJson)
}

function extraItemFromJson(json: any) {
  return {
    id: json['id'],
    code: json['code'],
    name: json['name'],
    value: json['value'],
    displayOrder: json['display_order']
  }
};

export function IncidentsGetResponse200TrackedObjectToJSON(value?: IncidentsGetResponse200TrackedObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'code': value.code,
        'name': value.name,
        'start_time': value.startTime,
        'end_time': value.endTime,
        'direction': value.direction,
        'license_plate_number': value.licensePlateNumber,
    };
}


