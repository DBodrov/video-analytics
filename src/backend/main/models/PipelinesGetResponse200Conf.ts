/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.17.dev126
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PipelinesGetResponse200ConfChecks,
    PipelinesGetResponse200ConfChecksFromJSON,
    PipelinesGetResponse200ConfChecksFromJSONTyped,
    PipelinesGetResponse200ConfChecksToJSON,
    PipelinesGetResponse200ConfDetector,
    PipelinesGetResponse200ConfDetectorFromJSON,
    PipelinesGetResponse200ConfDetectorFromJSONTyped,
    PipelinesGetResponse200ConfDetectorToJSON,
    PipelinesGetResponse200ConfPolygon,
    PipelinesGetResponse200ConfPolygonFromJSON,
    PipelinesGetResponse200ConfPolygonFromJSONTyped,
    PipelinesGetResponse200ConfPolygonToJSON,
    PipelinesGetResponse200ConfTracker,
    PipelinesGetResponse200ConfTrackerFromJSON,
    PipelinesGetResponse200ConfTrackerFromJSONTyped,
    PipelinesGetResponse200ConfTrackerToJSON,
} from './';

/**
 * Конфигурация конвейера
 * @export
 * @interface PipelinesGetResponse200Conf
 */
export interface PipelinesGetResponse200Conf {
    /**
     * Набор проверок
     * @type {Array<PipelinesGetResponse200ConfChecks>}
     * @memberof PipelinesGetResponse200Conf
     */
    checks: Array<PipelinesGetResponse200ConfChecks>;
    /**
     * 
     * @type {PipelinesGetResponse200ConfDetector}
     * @memberof PipelinesGetResponse200Conf
     */
    detector: PipelinesGetResponse200ConfDetector;
    /**
     * Набор точек полигона
     * @type {Array<PipelinesGetResponse200ConfPolygon>}
     * @memberof PipelinesGetResponse200Conf
     */
    polygon: Array<PipelinesGetResponse200ConfPolygon>;
    /**
     * 
     * @type {PipelinesGetResponse200ConfTracker}
     * @memberof PipelinesGetResponse200Conf
     */
    tracker: PipelinesGetResponse200ConfTracker;
}

export function PipelinesGetResponse200ConfFromJSON(json: any): PipelinesGetResponse200Conf {
    return PipelinesGetResponse200ConfFromJSONTyped(json, false);
}

export function PipelinesGetResponse200ConfFromJSONTyped(json: any, ignoreDiscriminator: boolean): PipelinesGetResponse200Conf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'checks': ((json['checks'] as Array<any>).map(PipelinesGetResponse200ConfChecksFromJSON)),
        'detector': PipelinesGetResponse200ConfDetectorFromJSON(json['detector']),
        'polygon': ((json['polygon'] as Array<any>).map(PipelinesGetResponse200ConfPolygonFromJSON)),
        'tracker': PipelinesGetResponse200ConfTrackerFromJSON(json['tracker']),
    };
}

export function PipelinesGetResponse200ConfToJSON(value?: PipelinesGetResponse200Conf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'checks': ((value.checks as Array<any>).map(PipelinesGetResponse200ConfChecksToJSON)),
        'detector': PipelinesGetResponse200ConfDetectorToJSON(value.detector),
        'polygon': ((value.polygon as Array<any>).map(PipelinesGetResponse200ConfPolygonToJSON)),
        'tracker': PipelinesGetResponse200ConfTrackerToJSON(value.tracker),
    };
}


