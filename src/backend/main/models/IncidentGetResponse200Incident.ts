/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.19.dev162
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IncidentGetResponse200IncidentImage,
    IncidentGetResponse200IncidentImageFromJSON,
    IncidentGetResponse200IncidentImageFromJSONTyped,
    IncidentGetResponse200IncidentImageToJSON,
    IncidentGetResponse200IncidentPeriod,
    IncidentGetResponse200IncidentPeriodFromJSON,
    IncidentGetResponse200IncidentPeriodFromJSONTyped,
    IncidentGetResponse200IncidentPeriodToJSON,
    IncidentGetResponse200IncidentStatus,
    IncidentGetResponse200IncidentStatusFromJSON,
    IncidentGetResponse200IncidentStatusFromJSONTyped,
    IncidentGetResponse200IncidentStatusToJSON,
    IncidentGetResponse200IncidentThumbnail,
    IncidentGetResponse200IncidentThumbnailFromJSON,
    IncidentGetResponse200IncidentThumbnailFromJSONTyped,
    IncidentGetResponse200IncidentThumbnailToJSON,
    IncidentGetResponse200IncidentTrackedObject,
    IncidentGetResponse200IncidentTrackedObjectFromJSON,
    IncidentGetResponse200IncidentTrackedObjectFromJSONTyped,
    IncidentGetResponse200IncidentTrackedObjectToJSON,
} from './';

/**
 * Сведения об инциденте
 * @export
 * @interface IncidentGetResponse200Incident
 */
export interface IncidentGetResponse200Incident {
    /**
     * Идентификатор категории инцидента
     * @type {number}
     * @memberof IncidentGetResponse200Incident
     */
    categoryId: number;
    /**
     * Идентификатор инцидента
     * @type {number}
     * @memberof IncidentGetResponse200Incident
     */
    id: number;
    /**
     * Список идентификаторов событий по инциденту
     * @type {Array<number>}
     * @memberof IncidentGetResponse200Incident
     */
    eventIds: Array<number>;
    /**
     * 
     * @type {IncidentGetResponse200IncidentImage}
     * @memberof IncidentGetResponse200Incident
     */
    image: IncidentGetResponse200IncidentImage;
    /**
     * Идентификатор площадки
     * @type {number}
     * @memberof IncidentGetResponse200Incident
     */
    locationId: number;
    /**
     * 
     * @type {IncidentGetResponse200IncidentPeriod}
     * @memberof IncidentGetResponse200Incident
     */
    period: IncidentGetResponse200IncidentPeriod;
    /**
     * Идентификатор датчика
     * @type {number}
     * @memberof IncidentGetResponse200Incident
     */
    sensorId: number;
    /**
     * 
     * @type {IncidentGetResponse200IncidentStatus}
     * @memberof IncidentGetResponse200Incident
     */
    status: IncidentGetResponse200IncidentStatus;
    /**
     * 
     * @type {IncidentGetResponse200IncidentThumbnail}
     * @memberof IncidentGetResponse200Incident
     */
    thumbnail: IncidentGetResponse200IncidentThumbnail;
    /**
     * Идентификатор категории обнаруженного объекта
     * @type {number}
     * @memberof IncidentGetResponse200Incident
     */
    tocId: number;
    /**
     * 
     * @type {IncidentGetResponse200IncidentTrackedObject}
     * @memberof IncidentGetResponse200Incident
     */
    trackedObject: IncidentGetResponse200IncidentTrackedObject;
}

export function IncidentGetResponse200IncidentFromJSON(json: any): IncidentGetResponse200Incident {
    return IncidentGetResponse200IncidentFromJSONTyped(json, false);
}

export function IncidentGetResponse200IncidentFromJSONTyped(json: any, ignoreDiscriminator: boolean): IncidentGetResponse200Incident {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'categoryId': json['category_id'],
        'id': json['id'],
        'eventIds': json['event_ids'],
        'image': IncidentGetResponse200IncidentImageFromJSON(json['image']),
        'locationId': json['location_id'],
        'period': IncidentGetResponse200IncidentPeriodFromJSON(json['period']),
        'sensorId': json['sensor_id'],
        'status': IncidentGetResponse200IncidentStatusFromJSON(json['status']),
        'thumbnail': IncidentGetResponse200IncidentThumbnailFromJSON(json['thumbnail']),
        'tocId': json['toc_id'],
        'trackedObject': IncidentGetResponse200IncidentTrackedObjectFromJSON(json['tracked_object']),
    };
}

export function IncidentGetResponse200IncidentToJSON(value?: IncidentGetResponse200Incident | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category_id': value.categoryId,
        'id': value.id,
        'event_ids': value.eventIds,
        'image': IncidentGetResponse200IncidentImageToJSON(value.image),
        'location_id': value.locationId,
        'period': IncidentGetResponse200IncidentPeriodToJSON(value.period),
        'sensor_id': value.sensorId,
        'status': IncidentGetResponse200IncidentStatusToJSON(value.status),
        'thumbnail': IncidentGetResponse200IncidentThumbnailToJSON(value.thumbnail),
        'toc_id': value.tocId,
        'tracked_object': IncidentGetResponse200IncidentTrackedObjectToJSON(value.trackedObject),
    };
}


