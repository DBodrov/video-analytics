/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.15.dev108
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EventsGetResponse200Thumbnail,
    EventsGetResponse200ThumbnailFromJSON,
    EventsGetResponse200ThumbnailFromJSONTyped,
    EventsGetResponse200ThumbnailToJSON,
} from './';

/**
 * Сведения о событии
 * @export
 * @interface EventsGetResponse200Events
 */
export interface EventsGetResponse200Events {
    /**
     * Код события
     * @type {string}
     * @memberof EventsGetResponse200Events
     */
    eventCode: string;
    /**
     * Дата и время совершения события в формате "YYYY-MM-DD HH:MI:SS"
     * @type {string}
     * @memberof EventsGetResponse200Events
     */
    eventTimestamp: string;
    /**
     * Идентификатор площадки
     * @type {number}
     * @memberof EventsGetResponse200Events
     */
    locationId: number;
    /**
     * Идентификатор датчика
     * @type {number}
     * @memberof EventsGetResponse200Events
     */
    sensorId: number;
    /**
     * Идентификатор категории обнаруженного объекта
     * @type {number}
     * @memberof EventsGetResponse200Events
     */
    tocId: number;
    /**
     * Идентификатор статуса события
     * @type {number}
     * @memberof EventsGetResponse200Events
     */
    statusId: number;
    /**
     * Код обнаруженного транспортного средства
     * @type {string}
     * @memberof EventsGetResponse200Events
     */
    trackCode: string;
    /**
     * 
     * @type {EventsGetResponse200Thumbnail}
     * @memberof EventsGetResponse200Events
     */
    thumbnail: EventsGetResponse200Thumbnail;
}

export function EventsGetResponse200EventsFromJSON(json: any): EventsGetResponse200Events {
    return EventsGetResponse200EventsFromJSONTyped(json, false);
}

export function EventsGetResponse200EventsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventsGetResponse200Events {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventCode': json['event_code'],
        'eventTimestamp': json['event_timestamp'],
        'locationId': json['location_id'],
        'sensorId': json['sensor_id'],
        'tocId': json['toc_id'],
        'statusId': json['status_id'],
        'trackCode': json['track_code'],
        'thumbnail': EventsGetResponse200ThumbnailFromJSON(json['thumbnail']),
    };
}

export function EventsGetResponse200EventsToJSON(value?: EventsGetResponse200Events | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event_code': value.eventCode,
        'event_timestamp': value.eventTimestamp,
        'location_id': value.locationId,
        'sensor_id': value.sensorId,
        'toc_id': value.tocId,
        'status_id': value.statusId,
        'track_code': value.trackCode,
        'thumbnail': EventsGetResponse200ThumbnailToJSON(value.thumbnail),
    };
}


