/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.19.dev162
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Статистические показатели в разрезе площадки, датчика и категории отслеживаемого объекта
 * @export
 * @interface CompanySensorStatsGetResponse200Stats
 */
export interface CompanySensorStatsGetResponse200Stats {
    /**
     * Период показаний
     * @type {string}
     * @memberof CompanySensorStatsGetResponse200Stats
     */
    period: string;
    /**
     * Идентификатор площадки
     * @type {number}
     * @memberof CompanySensorStatsGetResponse200Stats
     */
    locationId: number;
    /**
     * Идентификатор датчика
     * @type {number}
     * @memberof CompanySensorStatsGetResponse200Stats
     */
    sensorId: number;
    /**
     * Идентификатор категории обнаруженного объекта
     * @type {number}
     * @memberof CompanySensorStatsGetResponse200Stats
     */
    tocId: number;
    /**
     * Количество событий за период
     * @type {number}
     * @memberof CompanySensorStatsGetResponse200Stats
     */
    events: number;
    /**
     * Количество инцидентов за период
     * @type {number}
     * @memberof CompanySensorStatsGetResponse200Stats
     */
    incidents: number;
}

export function CompanySensorStatsGetResponse200StatsFromJSON(json: any): CompanySensorStatsGetResponse200Stats {
    return CompanySensorStatsGetResponse200StatsFromJSONTyped(json, false);
}

export function CompanySensorStatsGetResponse200StatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanySensorStatsGetResponse200Stats {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'period': json['period'],
        'locationId': json['location_id'],
        'sensorId': json['sensor_id'],
        'tocId': json['toc_id'],
        'events': json['events'],
        'incidents': json['incidents'],
    };
}

export function CompanySensorStatsGetResponse200StatsToJSON(value?: CompanySensorStatsGetResponse200Stats | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'period': value.period,
        'location_id': value.locationId,
        'sensor_id': value.sensorId,
        'toc_id': value.tocId,
        'events': value.events,
        'incidents': value.incidents,
    };
}


