/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.19.dev146
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CompanySensorsGetResponse200RefCategory,
    CompanySensorsGetResponse200RefCategoryFromJSON,
    CompanySensorsGetResponse200RefCategoryFromJSONTyped,
    CompanySensorsGetResponse200RefCategoryToJSON,
} from './';

/**
 * Редко изменяемые справочные данные датчика
 * @export
 * @interface CompanySensorsGetResponse200Ref
 */
export interface CompanySensorsGetResponse200Ref {
    /**
     * Идентификатор датчика
     * @type {number}
     * @memberof CompanySensorsGetResponse200Ref
     */
    id: number;
    /**
     * Код датчика
     * @type {string}
     * @memberof CompanySensorsGetResponse200Ref
     */
    code: string;
    /**
     * Краткое название датчика
     * @type {string}
     * @memberof CompanySensorsGetResponse200Ref
     */
    name: string;
    /**
     * Описание датчика
     * @type {string}
     * @memberof CompanySensorsGetResponse200Ref
     */
    description: string;
    /**
     * Отображаемый датчик по умолчанию
     * @type {boolean}
     * @memberof CompanySensorsGetResponse200Ref
     */
    byDefault: boolean;
    /**
     * Идентификатор компании
     * @type {number}
     * @memberof CompanySensorsGetResponse200Ref
     */
    companyId: number;
    /**
     * Идентификатор площадки
     * @type {number}
     * @memberof CompanySensorsGetResponse200Ref
     */
    locationId: number;
    /**
     * Расположение датчика
     * @type {string}
     * @memberof CompanySensorsGetResponse200Ref
     */
    address: string;
    /**
     * Адрес видеопотока
     * @type {string}
     * @memberof CompanySensorsGetResponse200Ref
     */
    url: string;
    /**
     * 
     * @type {CompanySensorsGetResponse200RefCategory}
     * @memberof CompanySensorsGetResponse200Ref
     */
    category: CompanySensorsGetResponse200RefCategory;
}

export function CompanySensorsGetResponse200RefFromJSON(json: any): CompanySensorsGetResponse200Ref {
    return CompanySensorsGetResponse200RefFromJSONTyped(json, false);
}

export function CompanySensorsGetResponse200RefFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanySensorsGetResponse200Ref {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'code': json['code'],
        'name': json['name'],
        'description': json['description'],
        'byDefault': json['by_default'],
        'companyId': json['company_id'],
        'locationId': json['location_id'],
        'address': json['address'],
        'url': json['url'],
        'category': CompanySensorsGetResponse200RefCategoryFromJSON(json['category']),
    };
}

export function CompanySensorsGetResponse200RefToJSON(value?: CompanySensorsGetResponse200Ref | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'name': value.name,
        'description': value.description,
        'by_default': value.byDefault,
        'company_id': value.companyId,
        'location_id': value.locationId,
        'address': value.address,
        'url': value.url,
        'category': CompanySensorsGetResponse200RefCategoryToJSON(value.category),
    };
}


