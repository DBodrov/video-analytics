/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.19.dev163
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompanyReportsPostRequest
 */
export interface CompanyReportsPostRequest {
    /**
     * Левая граница диапазона в формате "YYYY-MM-DDTHH:MI:SS"
     * @type {string}
     * @memberof CompanyReportsPostRequest
     */
    startTime: string;
    /**
     * Правая граница диапазона в формате "YYYY-MM-DDTHH:MI:SS"
     * @type {string}
     * @memberof CompanyReportsPostRequest
     */
    endTime: string;
    /**
     * Смещение часового пояса в часах
     * @type {number}
     * @memberof CompanyReportsPostRequest
     */
    tzOffset: number;
    /**
     * Типы сущностей, по которым строится отчёт
     * @type {Array<string>}
     * @memberof CompanyReportsPostRequest
     */
    entityTypes: Array<string>;
    /**
     * Массив идентификаторов правил
     * @type {Array<string>}
     * @memberof CompanyReportsPostRequest
     */
    checkIds?: Array<string>;
    /**
     * Массив идентификаторов правил
     * @type {Array<string>}
     * @memberof CompanyReportsPostRequest
     */
    checkCategoryIds?: Array<string>;
    /**
     * Массив идентификаторов площадок
     * @type {Array<string>}
     * @memberof CompanyReportsPostRequest
     */
    locationIds?: Array<string>;
    /**
     * Массив идентификаторов датчиков
     * @type {Array<string>}
     * @memberof CompanyReportsPostRequest
     */
    sensorIds?: Array<string>;
}

export function CompanyReportsPostRequestFromJSON(json: any): CompanyReportsPostRequest {
    return CompanyReportsPostRequestFromJSONTyped(json, false);
}

export function CompanyReportsPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyReportsPostRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startTime': json['start_time'],
        'endTime': json['end_time'],
        'tzOffset': json['tz_offset'],
        'entityTypes': json['entity_types'],
        'checkIds': !exists(json, 'check_ids') ? undefined : json['check_ids'],
        'checkCategoryIds': !exists(json, 'check_category_ids') ? undefined : json['check_category_ids'],
        'locationIds': !exists(json, 'location_ids') ? undefined : json['location_ids'],
        'sensorIds': !exists(json, 'sensor_ids') ? undefined : json['sensor_ids'],
    };
}

export function CompanyReportsPostRequestToJSON(value?: CompanyReportsPostRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'start_time': value.startTime,
        'end_time': value.endTime,
        'tz_offset': value.tzOffset,
        'entity_types': value.entityTypes,
        'check_ids': value.checkIds,
        'check_category_ids': value.checkCategoryIds,
        'location_ids': value.locationIds,
        'sensor_ids': value.sensorIds,
    };
}


