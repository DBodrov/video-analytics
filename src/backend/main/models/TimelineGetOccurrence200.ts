/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.19.dev163
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IncidentGetResponse200IncidentTrackedObject,
    IncidentGetResponse200IncidentTrackedObjectFromJSON,
    IncidentGetResponse200IncidentTrackedObjectFromJSONTyped,
    IncidentGetResponse200IncidentTrackedObjectToJSON,
    TimelineGetOccurrence200Thumbnail,
    TimelineGetOccurrence200ThumbnailFromJSON,
    TimelineGetOccurrence200ThumbnailFromJSONTyped,
    TimelineGetOccurrence200ThumbnailToJSON,
} from './';

/**
 * Сведения о событии
 * @export
 * @interface TimelineGetOccurrence200
 */
export interface TimelineGetOccurrence200 {
    /**
     * Идентификатор записи
     * @type {number}
     * @memberof TimelineGetOccurrence200
     */
    id: number;
    /**
     * Код записи
     * @type {string}
     * @memberof TimelineGetOccurrence200
     */
    code: string;
    /**
     * Дата и время совершения в формате "YYYY-MM-DD HH:MI:SS"
     * @type {string}
     * @memberof TimelineGetOccurrence200
     */
    timestamp: string;
    /**
     * Идентификатор проверки
     * @type {number}
     * @memberof TimelineGetOccurrence200
     */
    checkId: number;
    /**
     * Идентификатор площадки
     * @type {number}
     * @memberof TimelineGetOccurrence200
     */
    locationId: number;
    /**
     * Идентификатор датчика
     * @type {number}
     * @memberof TimelineGetOccurrence200
     */
    sensorId: number;
    /**
     * Идентификатор категории обнаруженного объекта
     * @type {number}
     * @memberof TimelineGetOccurrence200
     */
    tocId: number;
    /**
     * 
     * @type {IncidentGetResponse200IncidentTrackedObject}
     * @memberof TimelineGetOccurrence200
     */
    trackedObject: IncidentGetResponse200IncidentTrackedObject;
    /**
     * 
     * @type {TimelineGetOccurrence200Thumbnail}
     * @memberof TimelineGetOccurrence200
     */
    thumbnail: TimelineGetOccurrence200Thumbnail;
}

export function TimelineGetOccurrence200FromJSON(json: any): TimelineGetOccurrence200 {
    return TimelineGetOccurrence200FromJSONTyped(json, false);
}

export function TimelineGetOccurrence200FromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineGetOccurrence200 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'code': json['code'],
        'timestamp': json['timestamp'],
        'checkId': json['check_id'],
        'locationId': json['location_id'],
        'sensorId': json['sensor_id'],
        'tocId': json['toc_id'],
        'trackedObject': IncidentGetResponse200IncidentTrackedObjectFromJSON(json['tracked_object']),
        'thumbnail': TimelineGetOccurrence200ThumbnailFromJSON(json['thumbnail']),
    };
}

export function TimelineGetOccurrence200ToJSON(value?: TimelineGetOccurrence200 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'timestamp': value.timestamp,
        'check_id': value.checkId,
        'location_id': value.locationId,
        'sensor_id': value.sensorId,
        'toc_id': value.tocId,
        'tracked_object': IncidentGetResponse200IncidentTrackedObjectToJSON(value.trackedObject),
        'thumbnail': TimelineGetOccurrence200ThumbnailToJSON(value.thumbnail),
    };
}


