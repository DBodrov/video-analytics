/* tslint:disable */
/* eslint-disable */
/**
 * va
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InoutEventsStatsGetResponse200,
    InoutEventsStatsGetResponse200FromJSON,
    InoutEventsStatsGetResponse200ToJSON,
    InoutLatestEventsGetResponse200,
    InoutLatestEventsGetResponse200FromJSON,
    InoutLatestEventsGetResponse200ToJSON,
} from '../models';

export interface ApiVaCompaniesCompanyIdEventsInoutLatestGetRequest {
    companyId: number;
    tzOffset?: number;
}

export interface ApiVaCompaniesCompanyIdEventsInoutStatsGetRequest {
    companyId: number;
    tzOffset?: number;
}

/**
 * EventApi - interface
 * 
 * @export
 * @interface EventApiInterface
 */
export interface EventApiInterface {
    /**
     * # 
     * @summary # Учет въезжающих/выезжающих транспортных средств. Последние события
     * @param {number} companyId Идентификатор компании
     * @param {number} [tzOffset] Смещение часового пояса в часах в диапазоне от [-12, +12]. По умолчанию 0
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApiInterface
     */
    apiVaCompaniesCompanyIdEventsInoutLatestGetRaw(requestParameters: ApiVaCompaniesCompanyIdEventsInoutLatestGetRequest): Promise<runtime.ApiResponse<InoutLatestEventsGetResponse200>>;

    /**
     * # 
     * # Учет въезжающих/выезжающих транспортных средств. Последние события
     */
    apiVaCompaniesCompanyIdEventsInoutLatestGet(requestParameters: ApiVaCompaniesCompanyIdEventsInoutLatestGetRequest): Promise<InoutLatestEventsGetResponse200>;

    /**
     * # 
     * @summary # Учет въезжающих/выезжающих транспортныех средств. Статистика
     * @param {number} companyId Идентификатор компании
     * @param {number} [tzOffset] Смещение часового пояса в часах в диапазоне от [-12, +12]. По умолчанию 0
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApiInterface
     */
    apiVaCompaniesCompanyIdEventsInoutStatsGetRaw(requestParameters: ApiVaCompaniesCompanyIdEventsInoutStatsGetRequest): Promise<runtime.ApiResponse<InoutEventsStatsGetResponse200>>;

    /**
     * # 
     * # Учет въезжающих/выезжающих транспортныех средств. Статистика
     */
    apiVaCompaniesCompanyIdEventsInoutStatsGet(requestParameters: ApiVaCompaniesCompanyIdEventsInoutStatsGetRequest): Promise<InoutEventsStatsGetResponse200>;

}

/**
 * 
 */
export class EventApi extends runtime.BaseAPI implements EventApiInterface {

    /**
     * # 
     * # Учет въезжающих/выезжающих транспортных средств. Последние события
     */
    async apiVaCompaniesCompanyIdEventsInoutLatestGetRaw(requestParameters: ApiVaCompaniesCompanyIdEventsInoutLatestGetRequest): Promise<runtime.ApiResponse<InoutLatestEventsGetResponse200>> {
        if (requestParameters.companyId === null || requestParameters.companyId === undefined) {
            throw new runtime.RequiredError('companyId','Required parameter requestParameters.companyId was null or undefined when calling apiVaCompaniesCompanyIdEventsInoutLatestGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.tzOffset !== undefined) {
            queryParameters['tz_offset'] = requestParameters.tzOffset;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/va/companies/{company_id}/events/inout/latest`.replace(`{${"company_id"}}`, encodeURIComponent(String(requestParameters.companyId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => InoutLatestEventsGetResponse200FromJSON(jsonValue));
    }

    /**
     * # 
     * # Учет въезжающих/выезжающих транспортных средств. Последние события
     */
    async apiVaCompaniesCompanyIdEventsInoutLatestGet(requestParameters: ApiVaCompaniesCompanyIdEventsInoutLatestGetRequest): Promise<InoutLatestEventsGetResponse200> {
        const response = await this.apiVaCompaniesCompanyIdEventsInoutLatestGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * # 
     * # Учет въезжающих/выезжающих транспортныех средств. Статистика
     */
    async apiVaCompaniesCompanyIdEventsInoutStatsGetRaw(requestParameters: ApiVaCompaniesCompanyIdEventsInoutStatsGetRequest): Promise<runtime.ApiResponse<InoutEventsStatsGetResponse200>> {
        if (requestParameters.companyId === null || requestParameters.companyId === undefined) {
            throw new runtime.RequiredError('companyId','Required parameter requestParameters.companyId was null or undefined when calling apiVaCompaniesCompanyIdEventsInoutStatsGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.tzOffset !== undefined) {
            queryParameters['tz_offset'] = requestParameters.tzOffset;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/va/companies/{company_id}/events/inout/stats`.replace(`{${"company_id"}}`, encodeURIComponent(String(requestParameters.companyId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => InoutEventsStatsGetResponse200FromJSON(jsonValue));
    }

    /**
     * # 
     * # Учет въезжающих/выезжающих транспортныех средств. Статистика
     */
    async apiVaCompaniesCompanyIdEventsInoutStatsGet(requestParameters: ApiVaCompaniesCompanyIdEventsInoutStatsGetRequest): Promise<InoutEventsStatsGetResponse200> {
        const response = await this.apiVaCompaniesCompanyIdEventsInoutStatsGetRaw(requestParameters);
        return await response.value();
    }

}
