/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * powered by Flasgger
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CompanyGetResponse200,
    CompanyGetResponse200FromJSON,
    CompanyGetResponse200ToJSON,
} from '../models';

export interface ApiAuthCompaniesCompanyIdGetRequest {
    companyId: number;
}

/**
 * CompanyApi - interface
 * 
 * @export
 * @interface CompanyApiInterface
 */
export interface CompanyApiInterface {
    /**
     * # 
     * @summary # Сведения о компании
     * @param {number} companyId Идентификатор компании
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CompanyApiInterface
     */
    apiAuthCompaniesCompanyIdGetRaw(requestParameters: ApiAuthCompaniesCompanyIdGetRequest): Promise<runtime.ApiResponse<CompanyGetResponse200>>;

    /**
     * # 
     * # Сведения о компании
     */
    apiAuthCompaniesCompanyIdGet(requestParameters: ApiAuthCompaniesCompanyIdGetRequest): Promise<CompanyGetResponse200>;

    /**
     * # 
     * @summary # Сведения о компаниях
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CompanyApiInterface
     */
    apiAuthCompaniesGetRaw(): Promise<runtime.ApiResponse<Array<object>>>;

    /**
     * # 
     * # Сведения о компаниях
     */
    apiAuthCompaniesGet(): Promise<Array<object>>;

}

/**
 * 
 */
export class CompanyApi extends runtime.BaseAPI implements CompanyApiInterface {

    /**
     * # 
     * # Сведения о компании
     */
    async apiAuthCompaniesCompanyIdGetRaw(requestParameters: ApiAuthCompaniesCompanyIdGetRequest): Promise<runtime.ApiResponse<CompanyGetResponse200>> {
        if (requestParameters.companyId === null || requestParameters.companyId === undefined) {
            throw new runtime.RequiredError('companyId','Required parameter requestParameters.companyId was null or undefined when calling apiAuthCompaniesCompanyIdGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/companies/{company_id}`.replace(`{${"company_id"}}`, encodeURIComponent(String(requestParameters.companyId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => CompanyGetResponse200FromJSON(jsonValue));
    }

    /**
     * # 
     * # Сведения о компании
     */
    async apiAuthCompaniesCompanyIdGet(requestParameters: ApiAuthCompaniesCompanyIdGetRequest): Promise<CompanyGetResponse200> {
        const response = await this.apiAuthCompaniesCompanyIdGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * # 
     * # Сведения о компаниях
     */
    async apiAuthCompaniesGetRaw(): Promise<runtime.ApiResponse<Array<object>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/companies`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * # 
     * # Сведения о компаниях
     */
    async apiAuthCompaniesGet(): Promise<Array<object>> {
        const response = await this.apiAuthCompaniesGetRaw();
        return await response.value();
    }

}
